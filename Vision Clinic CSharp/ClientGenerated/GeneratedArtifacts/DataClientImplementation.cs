//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region Patient
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Patient :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Patient.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if (this._FirstName != value)
                {
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._FirstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                }
            }
        }
        private string _FirstName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if (this._LastName != value)
                {
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._LastName = value;
                    this.RaiseDataMemberChanged("LastName");
                }
            }
        }
        private string _LastName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Street
        {
            get
            {
                return this._Street;
            }
            set
            {
                if (this._Street != value)
                {
                    this.RaiseDataMemberChanging("Street");
                    this.ValidateProperty("Street", value);
                    this._Street = value;
                    this.RaiseDataMemberChanged("Street");
                }
            }
        }
        private string _Street;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Street2
        {
            get
            {
                return this._Street2;
            }
            set
            {
                if (this._Street2 != value)
                {
                    this.RaiseDataMemberChanging("Street2");
                    this.ValidateProperty("Street2", value);
                    this._Street2 = value;
                    this.RaiseDataMemberChanged("Street2");
                }
            }
        }
        private string _Street2;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if (this._City != value)
                {
                    this.RaiseDataMemberChanging("City");
                    this.ValidateProperty("City", value);
                    this._City = value;
                    this.RaiseDataMemberChanged("City");
                }
            }
        }
        private string _City;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if (this._State != value)
                {
                    this.RaiseDataMemberChanging("State");
                    this.ValidateProperty("State", value);
                    this._State = value;
                    this.RaiseDataMemberChanged("State");
                }
            }
        }
        private string _State;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Zip
        {
            get
            {
                return this._Zip;
            }
            set
            {
                if (this._Zip != value)
                {
                    this.RaiseDataMemberChanging("Zip");
                    this.ValidateProperty("Zip", value);
                    this._Zip = value;
                    this.RaiseDataMemberChanged("Zip");
                }
            }
        }
        private string _Zip;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PrimaryPhone
        {
            get
            {
                return this._PrimaryPhone;
            }
            set
            {
                if (this._PrimaryPhone != value)
                {
                    this.RaiseDataMemberChanging("PrimaryPhone");
                    this.ValidateProperty("PrimaryPhone", value);
                    this._PrimaryPhone = value;
                    this.RaiseDataMemberChanged("PrimaryPhone");
                }
            }
        }
        private string _PrimaryPhone;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SecondaryPhone
        {
            get
            {
                return this._SecondaryPhone;
            }
            set
            {
                if (this._SecondaryPhone != value)
                {
                    this.RaiseDataMemberChanging("SecondaryPhone");
                    this.ValidateProperty("SecondaryPhone", value);
                    this._SecondaryPhone = value;
                    this.RaiseDataMemberChanged("SecondaryPhone");
                }
            }
        }
        private string _SecondaryPhone;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.RaiseDataMemberChanging("Email");
                    this.ValidateProperty("Email", value);
                    this._Email = value;
                    this.RaiseDataMemberChanged("Email");
                }
            }
        }
        private string _Email;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PolicyNumber
        {
            get
            {
                return this._PolicyNumber;
            }
            set
            {
                if (this._PolicyNumber != value)
                {
                    this.RaiseDataMemberChanging("PolicyNumber");
                    this.ValidateProperty("PolicyNumber", value);
                    this._PolicyNumber = value;
                    this.RaiseDataMemberChanged("PolicyNumber");
                }
            }
        }
        private string _PolicyNumber;
        
        [global::System.ComponentModel.DataAnnotations.Association("Invoice_Patient", "Id", "Invoice_Patient")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Invoice> Invoices
        {
            get
            {
                if (this._Invoices == null)
                {
                    this._Invoices = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Invoice>(this, "Invoices", this.FilterInvoices, this.AttachInvoices, this.DetachInvoices);
                }
                return this._Invoices;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Invoice> _Invoices;
        private void AttachInvoices(global::LightSwitchApplication.Implementation.Invoice entity)
        {
            entity.Patient = this;
        }
        private void DetachInvoices(global::LightSwitchApplication.Implementation.Invoice entity)
        {
            entity.Patient = null;
        }
        private bool FilterInvoices(global::LightSwitchApplication.Implementation.Invoice entity)
        {
            return global::System.Object.Equals(entity.Invoice_Patient, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Patient.DetailsClass.IImplementation.Invoices
        {
            get
            {
                return this.Invoices;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("Appointment_Patient", "Id", "Appointment_Patient")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Appointment> Appointments
        {
            get
            {
                if (this._Appointments == null)
                {
                    this._Appointments = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Appointment>(this, "Appointments", this.FilterAppointments, this.AttachAppointments, this.DetachAppointments);
                }
                return this._Appointments;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Appointment> _Appointments;
        private void AttachAppointments(global::LightSwitchApplication.Implementation.Appointment entity)
        {
            entity.Patient = this;
        }
        private void DetachAppointments(global::LightSwitchApplication.Implementation.Appointment entity)
        {
            entity.Patient = null;
        }
        private bool FilterAppointments(global::LightSwitchApplication.Implementation.Appointment entity)
        {
            return global::System.Object.Equals(entity.Appointment_Patient, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Patient.DetailsClass.IImplementation.Appointments
        {
            get
            {
                return this.Appointments;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Invoice
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Invoice :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Invoice.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if (this._InvoiceDate != value)
                {
                    this.RaiseDataMemberChanging("InvoiceDate");
                    this.ValidateProperty("InvoiceDate", value);
                    this._InvoiceDate = value;
                    this.RaiseDataMemberChanged("InvoiceDate");
                }
            }
        }
        private global::System.DateTime _InvoiceDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime InvoiceDue
        {
            get
            {
                return this._InvoiceDue;
            }
            set
            {
                if (this._InvoiceDue != value)
                {
                    this.RaiseDataMemberChanging("InvoiceDue");
                    this.ValidateProperty("InvoiceDue", value);
                    this._InvoiceDue = value;
                    this.RaiseDataMemberChanged("InvoiceDue");
                }
            }
        }
        private global::System.DateTime _InvoiceDue;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int InvoiceStatus
        {
            get
            {
                return this._InvoiceStatus;
            }
            set
            {
                if (this._InvoiceStatus != value)
                {
                    this.RaiseDataMemberChanging("InvoiceStatus");
                    this.ValidateProperty("InvoiceStatus", value);
                    this._InvoiceStatus = value;
                    this.RaiseDataMemberChanged("InvoiceStatus");
                }
            }
        }
        private int _InvoiceStatus;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime ShipDate
        {
            get
            {
                return this._ShipDate;
            }
            set
            {
                if (this._ShipDate != value)
                {
                    this.RaiseDataMemberChanging("ShipDate");
                    this.ValidateProperty("ShipDate", value);
                    this._ShipDate = value;
                    this.RaiseDataMemberChanged("ShipDate");
                }
            }
        }
        private global::System.DateTime _ShipDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Invoice_Patient
        {
            get
            {
                return this._Invoice_Patient;
            }
            set
            {
                if (this._Invoice_Patient != value)
                {
                    this.RaiseDataMemberChanging("Invoice_Patient");
                    this.ValidateProperty("Invoice_Patient", value);
                    this._Invoice_Patient = value;
                    this.RaiseDataMemberChanged("Invoice_Patient");
                }
            }
        }
        private int _Invoice_Patient;
        
        [global::System.ComponentModel.DataAnnotations.Association("Invoice_Patient", "Invoice_Patient", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Patient Patient
        {
            get
            {
                if (this._Patient == null)
                {
                    this._Patient = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Patient>(this, "Patient", this.FilterPatient);
                }
                return this._Patient.Entity;
            }
            set
            {
                Patient previous = this.Patient;
                if (previous != value)
                {
                    this.ValidateProperty("Patient", value);
                    if (previous != null)
                    {
                        this._Patient.Entity = null;
                        previous.Invoices.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Invoice_Patient = value.Id;
                    }
                    else
                    {
                        this.Invoice_Patient = default(int);
                    }
                    this._Patient.Entity = value;
                    if (value != null)
                    {
                        value.Invoices.Add(this);
                    }
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Patient> _Patient;
        private bool FilterPatient(global::LightSwitchApplication.Implementation.Patient entity)
        {
            return global::System.Object.Equals(entity.Id, this.Invoice_Patient);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Invoice.DetailsClass.IImplementation.Patient
        {
            get
            {
                return this.Patient;
            }
            set
            {
                this.Patient = (global::LightSwitchApplication.Implementation.Patient)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("Invoice_InvoiceDetail", "Id", "Invoice_InvoiceDetail")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<InvoiceDetail> InvoiceDetails
        {
            get
            {
                if (this._InvoiceDetails == null)
                {
                    this._InvoiceDetails = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.InvoiceDetail>(this, "InvoiceDetails", this.FilterInvoiceDetails, this.AttachInvoiceDetails, this.DetachInvoiceDetails);
                }
                return this._InvoiceDetails;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.InvoiceDetail> _InvoiceDetails;
        private void AttachInvoiceDetails(global::LightSwitchApplication.Implementation.InvoiceDetail entity)
        {
            entity.Invoice = this;
        }
        private void DetachInvoiceDetails(global::LightSwitchApplication.Implementation.InvoiceDetail entity)
        {
            entity.Invoice = null;
        }
        private bool FilterInvoiceDetails(global::LightSwitchApplication.Implementation.InvoiceDetail entity)
        {
            return global::System.Object.Equals(entity.Invoice_InvoiceDetail, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Invoice.DetailsClass.IImplementation.InvoiceDetails
        {
            get
            {
                return this.InvoiceDetails;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region InvoiceDetail
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class InvoiceDetail :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                if (this._Quantity != value)
                {
                    this.RaiseDataMemberChanging("Quantity");
                    this.ValidateProperty("Quantity", value);
                    this._Quantity = value;
                    this.RaiseDataMemberChanged("Quantity");
                }
            }
        }
        private int _Quantity;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public decimal UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                if (this._UnitPrice != value)
                {
                    this.RaiseDataMemberChanging("UnitPrice");
                    this.ValidateProperty("UnitPrice", value);
                    this._UnitPrice = value;
                    this.RaiseDataMemberChanged("UnitPrice");
                }
            }
        }
        private decimal _UnitPrice;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Product_ProductID
        {
            get
            {
                return this._Product_ProductID;
            }
            set
            {
                if (this._Product_ProductID != value)
                {
                    this.RaiseDataMemberChanging("Product_ProductID");
                    this.ValidateProperty("Product_ProductID", value);
                    this._Product_ProductID = value;
                    this.RaiseDataMemberChanged("Product_ProductID");
                }
            }
        }
        private int _Product_ProductID;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Invoice_InvoiceDetail
        {
            get
            {
                return this._Invoice_InvoiceDetail;
            }
            set
            {
                if (this._Invoice_InvoiceDetail != value)
                {
                    this.RaiseDataMemberChanging("Invoice_InvoiceDetail");
                    this.ValidateProperty("Invoice_InvoiceDetail", value);
                    this._Invoice_InvoiceDetail = value;
                    this.RaiseDataMemberChanged("Invoice_InvoiceDetail");
                }
            }
        }
        private int _Invoice_InvoiceDetail;
        
        [global::System.ComponentModel.DataAnnotations.Association("Invoice_InvoiceDetail", "Invoice_InvoiceDetail", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Invoice Invoice
        {
            get
            {
                if (this._Invoice == null)
                {
                    this._Invoice = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Invoice>(this, "Invoice", this.FilterInvoice);
                }
                return this._Invoice.Entity;
            }
            set
            {
                Invoice previous = this.Invoice;
                if (previous != value)
                {
                    this.ValidateProperty("Invoice", value);
                    if (previous != null)
                    {
                        this._Invoice.Entity = null;
                        previous.InvoiceDetails.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Invoice_InvoiceDetail = value.Id;
                    }
                    else
                    {
                        this.Invoice_InvoiceDetail = default(int);
                    }
                    this._Invoice.Entity = value;
                    if (value != null)
                    {
                        value.InvoiceDetails.Add(this);
                    }
                    this.RaisePropertyChanged("Invoice");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Invoice> _Invoice;
        private bool FilterInvoice(global::LightSwitchApplication.Implementation.Invoice entity)
        {
            return global::System.Object.Equals(entity.Id, this.Invoice_InvoiceDetail);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation.Invoice
        {
            get
            {
                return this.Invoice;
            }
            set
            {
                this.Invoice = (global::LightSwitchApplication.Implementation.Invoice)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Appointment
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Appointment :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Appointment.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime AppointmentTime
        {
            get
            {
                return this._AppointmentTime;
            }
            set
            {
                if (this._AppointmentTime != value)
                {
                    this.RaiseDataMemberChanging("AppointmentTime");
                    this.ValidateProperty("AppointmentTime", value);
                    this._AppointmentTime = value;
                    this.RaiseDataMemberChanged("AppointmentTime");
                }
            }
        }
        private global::System.DateTime _AppointmentTime;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public short AppointmentType
        {
            get
            {
                return this._AppointmentType;
            }
            set
            {
                if (this._AppointmentType != value)
                {
                    this.RaiseDataMemberChanging("AppointmentType");
                    this.ValidateProperty("AppointmentType", value);
                    this._AppointmentType = value;
                    this.RaiseDataMemberChanged("AppointmentType");
                }
            }
        }
        private short _AppointmentType;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string DoctorNotes
        {
            get
            {
                return this._DoctorNotes;
            }
            set
            {
                if (this._DoctorNotes != value)
                {
                    this.RaiseDataMemberChanging("DoctorNotes");
                    this.ValidateProperty("DoctorNotes", value);
                    this._DoctorNotes = value;
                    this.RaiseDataMemberChanged("DoctorNotes");
                }
            }
        }
        private string _DoctorNotes;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Appointment_Patient
        {
            get
            {
                return this._Appointment_Patient;
            }
            set
            {
                if (this._Appointment_Patient != value)
                {
                    this.RaiseDataMemberChanging("Appointment_Patient");
                    this.ValidateProperty("Appointment_Patient", value);
                    this._Appointment_Patient = value;
                    this.RaiseDataMemberChanged("Appointment_Patient");
                }
            }
        }
        private int _Appointment_Patient;
        
        [global::System.ComponentModel.DataAnnotations.Association("Appointment_Patient", "Appointment_Patient", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Patient Patient
        {
            get
            {
                if (this._Patient == null)
                {
                    this._Patient = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Patient>(this, "Patient", this.FilterPatient);
                }
                return this._Patient.Entity;
            }
            set
            {
                Patient previous = this.Patient;
                if (previous != value)
                {
                    this.ValidateProperty("Patient", value);
                    if (previous != null)
                    {
                        this._Patient.Entity = null;
                        previous.Appointments.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Appointment_Patient = value.Id;
                    }
                    else
                    {
                        this.Appointment_Patient = default(int);
                    }
                    this._Patient.Entity = value;
                    if (value != null)
                    {
                        value.Appointments.Add(this);
                    }
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Patient> _Patient;
        private bool FilterPatient(global::LightSwitchApplication.Implementation.Patient entity)
        {
            return global::System.Object.Equals(entity.Id, this.Appointment_Patient);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Appointment.DetailsClass.IImplementation.Patient
        {
            get
            {
                return this.Patient;
            }
            set
            {
                this.Patient = (global::LightSwitchApplication.Implementation.Patient)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Product
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/PrescriptionContoso.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Product :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Product.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._ProductID;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                if (this._ProductID != value)
                {
                    this.ValidateProperty("ProductID", value);
                    this._ProductID = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        private int _ProductID;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string ProductName
        {
            get
            {
                return this._ProductName;
            }
            set
            {
                if (this._ProductName != value)
                {
                    this.RaiseDataMemberChanging("ProductName");
                    this.ValidateProperty("ProductName", value);
                    this._ProductName = value;
                    this.RaiseDataMemberChanged("ProductName");
                }
            }
        }
        private string _ProductName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public decimal MSRP
        {
            get
            {
                return this._MSRP;
            }
            set
            {
                if (this._MSRP != value)
                {
                    this.RaiseDataMemberChanging("MSRP");
                    this.ValidateProperty("MSRP", value);
                    this._MSRP = value;
                    this.RaiseDataMemberChanged("MSRP");
                }
            }
        }
        private decimal _MSRP;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._Description = value;
                    this.RaiseDataMemberChanged("Description");
                }
            }
        }
        private string _Description;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public byte[] ProductImage
        {
            get
            {
                return this._ProductImage;
            }
            set
            {
                if (this._ProductImage != value)
                {
                    this.RaiseDataMemberChanging("ProductImage");
                    this.ValidateProperty("ProductImage", value);
                    this._ProductImage = value;
                    this.RaiseDataMemberChanged("ProductImage");
                }
            }
        }
        private byte[] _ProductImage;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if (this._Category != value)
                {
                    this.RaiseDataMemberChanging("Category");
                    this.ValidateProperty("Category", value);
                    this._Category = value;
                    this.RaiseDataMemberChanged("Category");
                }
            }
        }
        private string _Category;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Product_ProductRebate", "ProductID", "ProductID")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<ProductRebate> ProductRebates
        {
            get
            {
                if (this._ProductRebates == null)
                {
                    this._ProductRebates = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductRebate>(this, "ProductRebates", this.FilterProductRebates, this.AttachProductRebates, this.DetachProductRebates);
                }
                return this._ProductRebates;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductRebate> _ProductRebates;
        private void AttachProductRebates(global::LightSwitchApplication.Implementation.ProductRebate entity)
        {
            entity.Product = this;
        }
        private void DetachProductRebates(global::LightSwitchApplication.Implementation.ProductRebate entity)
        {
            entity.Product = null;
        }
        private bool FilterProductRebates(global::LightSwitchApplication.Implementation.ProductRebate entity)
        {
            return global::System.Object.Equals(entity.ProductID, this.ProductID);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Product.DetailsClass.IImplementation.ProductRebates
        {
            get
            {
                return this.ProductRebates;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ProductRebate
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/PrescriptionContoso.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class ProductRebate :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.ProductRebate.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._ProductRebateID;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ProductRebateID
        {
            get
            {
                return this._ProductRebateID;
            }
            set
            {
                if (this._ProductRebateID != value)
                {
                    this.ValidateProperty("ProductRebateID", value);
                    this._ProductRebateID = value;
                    this.RaisePropertyChanged("ProductRebateID");
                }
            }
        }
        private int _ProductRebateID;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> RebateStart
        {
            get
            {
                return this._RebateStart;
            }
            set
            {
                if (this._RebateStart != value)
                {
                    this.RaiseDataMemberChanging("RebateStart");
                    this.ValidateProperty("RebateStart", value);
                    this._RebateStart = value;
                    this.RaiseDataMemberChanged("RebateStart");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _RebateStart;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> RebateEnd
        {
            get
            {
                return this._RebateEnd;
            }
            set
            {
                if (this._RebateEnd != value)
                {
                    this.RaiseDataMemberChanging("RebateEnd");
                    this.ValidateProperty("RebateEnd", value);
                    this._RebateEnd = value;
                    this.RaiseDataMemberChanged("RebateEnd");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _RebateEnd;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<decimal> Rebate
        {
            get
            {
                return this._Rebate;
            }
            set
            {
                if (this._Rebate != value)
                {
                    this.RaiseDataMemberChanging("Rebate");
                    this.ValidateProperty("Rebate", value);
                    this._Rebate = value;
                    this.RaiseDataMemberChanged("Rebate");
                }
            }
        }
        private global::System.Nullable<decimal> _Rebate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                if (this._ProductID != value)
                {
                    this.RaiseDataMemberChanging("ProductID");
                    this.ValidateProperty("ProductID", value);
                    this._ProductID = value;
                    this.RaiseDataMemberChanged("ProductID");
                }
            }
        }
        private int _ProductID;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Product_ProductRebate", "ProductID", "ProductID", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Product Product
        {
            get
            {
                if (this._Product == null)
                {
                    this._Product = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Product>(this, "Product", this.FilterProduct);
                }
                return this._Product.Entity;
            }
            set
            {
                Product previous = this.Product;
                if (previous != value)
                {
                    this.ValidateProperty("Product", value);
                    if (previous != null)
                    {
                        this._Product.Entity = null;
                        previous.ProductRebates.Remove(this);
                    }
                    if (value != null)
                    {
                        this.ProductID = value.ProductID;
                    }
                    else
                    {
                        this.ProductID = default(int);
                    }
                    this._Product.Entity = value;
                    if (value != null)
                    {
                        value.ProductRebates.Add(this);
                    }
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Product> _Product;
        private bool FilterProduct(global::LightSwitchApplication.Implementation.Product entity)
        {
            return global::System.Object.Equals(entity.ProductID, this.ProductID);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ProductRebate.DetailsClass.IImplementation.Product
        {
            get
            {
                return this.Product;
            }
            set
            {
                this.Product = (global::LightSwitchApplication.Implementation.Product)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ApplicationData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public ApplicationData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IApplicationDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-ApplicationDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Patient> PatientEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Patient>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Invoice> InvoiceEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Invoice>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.InvoiceDetail> InvoiceDetailEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.InvoiceDetail>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Appointment> AppointmentEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Appointment>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new ApplicationDataEntityContainer();
        }
    
        internal sealed class ApplicationDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public ApplicationDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Patient>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Invoice>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.InvoiceDetail>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Appointment>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IApplicationDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Patients_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Patients_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Patients_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPatients_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Patient> EndPatients_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Patients_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Patients_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Patients_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPatients_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Patient> EndPatients_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Patients_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Patients_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Patients_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPatients_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Patient> EndPatients_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Invoices_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Invoices_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Invoices_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInvoices_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Invoice> EndInvoices_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Invoices_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Invoices_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Invoices_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInvoices_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Invoice> EndInvoices_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Invoices_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Invoices_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Invoices_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInvoices_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Invoice> EndInvoices_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInvoiceDetails_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.InvoiceDetail> EndInvoiceDetails_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInvoiceDetails_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.InvoiceDetail> EndInvoiceDetails_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/InvoiceDetails_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginInvoiceDetails_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.InvoiceDetail> EndInvoiceDetails_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Appointments_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Appointments_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Appointments_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAppointments_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Appointment> EndAppointments_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Appointments_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Appointments_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Appointments_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAppointments_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Appointment> EndAppointments_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Appointments_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Appointments_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Appointments_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAppointments_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Appointment> EndAppointments_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Patient))
            {
                return new global::LightSwitchApplication.Implementation.Patient();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Invoice))
            {
                return new global::LightSwitchApplication.Implementation.Invoice();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.InvoiceDetail))
            {
                return new global::LightSwitchApplication.Implementation.InvoiceDetail();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Appointment))
            {
                return new global::LightSwitchApplication.Implementation.Appointment();
            }
            return null;
        }
    }
    #endregion
    
    #region PrescriptionContoso
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class PrescriptionContoso
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public PrescriptionContoso(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IPrescriptionContosoContract>(new global::System.Uri("LightSwitchApplication-Implementation-PrescriptionContosoDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Product> ProductEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Product>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.ProductRebate> ProductRebateEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.ProductRebate>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new PrescriptionContosoEntityContainer();
        }
    
        internal sealed class PrescriptionContosoEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public PrescriptionContosoEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Product>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.ProductRebate>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IPrescriptionContosoContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/Products_Single", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/Products_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/Products_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProducts_Single(string frameworkOperators, global::System.Nullable<int> ProductID, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Product> EndProducts_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/Products_SingleOrDefault", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/Products_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/Products_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProducts_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> ProductID, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Product> EndProducts_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/Products_All", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/Products_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/Products_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProducts_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Product> EndProducts_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_Single", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductRebates_Single(string frameworkOperators, global::System.Nullable<int> ProductRebateID, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ProductRebate> EndProductRebates_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_SingleOrDefault", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductRebates_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> ProductRebateID, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ProductRebate> EndProductRebates_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_All", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/ProductRebates_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductRebates_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ProductRebate> EndProductRebates_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/RelatedProducts", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/RelatedProductsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/RelatedProductsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginRelatedProducts(string frameworkOperators, string Category, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Product> EndRelatedProducts(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/PrescriptionContosoDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/PrescriptionContosoDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/PrescriptionContosoDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Product))
            {
                return new global::LightSwitchApplication.Implementation.Product();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ProductRebate))
            {
                return new global::LightSwitchApplication.Implementation.ProductRebate();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.ApplicationData();
            }
            if (dataServiceType == typeof(global::LightSwitchApplication.PrescriptionContoso))
            {
                return new global::LightSwitchApplication.PrescriptionContoso();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationData(dataService);
            }
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.PrescriptionContoso))
            {
                return new global::LightSwitchApplication.Implementation.PrescriptionContoso(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Patient) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Patient);
            }
            if (typeof(global::LightSwitchApplication.Invoice) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Invoice);
            }
            if (typeof(global::LightSwitchApplication.InvoiceDetail) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.InvoiceDetail);
            }
            if (typeof(global::LightSwitchApplication.Appointment) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Appointment);
            }
            if (typeof(global::LightSwitchApplication.Product) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Product);
            }
            if (typeof(global::LightSwitchApplication.ProductRebate) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ProductRebate);
            }
            return null;
        }
    }
}
