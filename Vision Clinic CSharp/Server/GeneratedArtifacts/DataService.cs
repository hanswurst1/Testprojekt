//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Inserting(global::LightSwitchApplication.Patient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Inserted(global::LightSwitchApplication.Patient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Updating(global::LightSwitchApplication.Patient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Updated(global::LightSwitchApplication.Patient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Deleting(global::LightSwitchApplication.Patient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Deleted(global::LightSwitchApplication.Patient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Validate(global::LightSwitchApplication.Patient entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updating(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updated(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Validate(global::LightSwitchApplication.Invoice entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Inserting(global::LightSwitchApplication.InvoiceDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Inserted(global::LightSwitchApplication.InvoiceDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Updating(global::LightSwitchApplication.InvoiceDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Updated(global::LightSwitchApplication.InvoiceDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Deleting(global::LightSwitchApplication.InvoiceDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Deleted(global::LightSwitchApplication.InvoiceDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Validate(global::LightSwitchApplication.InvoiceDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Inserting(global::LightSwitchApplication.Appointment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Inserted(global::LightSwitchApplication.Appointment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Updating(global::LightSwitchApplication.Appointment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Updated(global::LightSwitchApplication.Appointment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Deleting(global::LightSwitchApplication.Appointment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Deleted(global::LightSwitchApplication.Appointment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Validate(global::LightSwitchApplication.Appointment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Patient> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Patient> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Patient> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Patient> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Patient> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Patient> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patients_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.InvoiceDetail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.InvoiceDetail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.InvoiceDetail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDetails_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Appointment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Appointment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Appointment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Appointments_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>
                __PatientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>(
                    "Patients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Validate);
            private static bool __Patients_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Patients_CanInsert(ref result);
                return result;
            }
            private static bool __Patients_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Patients_CanUpdate(ref result);
                return result;
            }
            private static bool __Patients_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Patients_CanDelete(ref result);
                return result;
            }
            private static bool __Patients_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Patients_CanRead(ref result);
                return result;
            }
            private static void __Patients_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Patient e)
            {
                d.Patients_Inserting(e);
            }
            private static void __Patients_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Patient e)
            {
                d.Patients_Inserted(e);
            }
            private static void __Patients_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Patient e)
            {
                d.Patients_Updating(e);
            }
            private static void __Patients_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Patient e)
            {
                d.Patients_Updated(e);
            }
            private static void __Patients_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Patient e)
            {
                d.Patients_Deleting(e);
            }
            private static void __Patients_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Patient e)
            {
                d.Patients_Deleted(e);
            }
            private static void __Patients_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Patient e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Patients_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __InvoicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Validate);
            private static bool __Invoices_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanInsert(ref result);
                return result;
            }
            private static bool __Invoices_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanUpdate(ref result);
                return result;
            }
            private static bool __Invoices_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanDelete(ref result);
                return result;
            }
            private static bool __Invoices_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanRead(ref result);
                return result;
            }
            private static void __Invoices_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserting(e);
            }
            private static void __Invoices_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserted(e);
            }
            private static void __Invoices_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updating(e);
            }
            private static void __Invoices_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updated(e);
            }
            private static void __Invoices_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleting(e);
            }
            private static void __Invoices_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleted(e);
            }
            private static void __Invoices_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Invoices_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>
                __InvoiceDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>(
                    "InvoiceDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Validate);
            private static bool __InvoiceDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceDetails_CanInsert(ref result);
                return result;
            }
            private static bool __InvoiceDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __InvoiceDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceDetails_CanDelete(ref result);
                return result;
            }
            private static bool __InvoiceDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceDetails_CanRead(ref result);
                return result;
            }
            private static void __InvoiceDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceDetail e)
            {
                d.InvoiceDetails_Inserting(e);
            }
            private static void __InvoiceDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceDetail e)
            {
                d.InvoiceDetails_Inserted(e);
            }
            private static void __InvoiceDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceDetail e)
            {
                d.InvoiceDetails_Updating(e);
            }
            private static void __InvoiceDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceDetail e)
            {
                d.InvoiceDetails_Updated(e);
            }
            private static void __InvoiceDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceDetail e)
            {
                d.InvoiceDetails_Deleting(e);
            }
            private static void __InvoiceDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceDetail e)
            {
                d.InvoiceDetails_Deleted(e);
            }
            private static void __InvoiceDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.InvoiceDetails_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>
                __AppointmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>(
                    "Appointments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Validate);
            private static bool __Appointments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Appointments_CanInsert(ref result);
                return result;
            }
            private static bool __Appointments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Appointments_CanUpdate(ref result);
                return result;
            }
            private static bool __Appointments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Appointments_CanDelete(ref result);
                return result;
            }
            private static bool __Appointments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Appointments_CanRead(ref result);
                return result;
            }
            private static void __Appointments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Appointment e)
            {
                d.Appointments_Inserting(e);
            }
            private static void __Appointments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Appointment e)
            {
                d.Appointments_Inserted(e);
            }
            private static void __Appointments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Appointment e)
            {
                d.Appointments_Updating(e);
            }
            private static void __Appointments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Appointment e)
            {
                d.Appointments_Updated(e);
            }
            private static void __Appointments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Appointment e)
            {
                d.Appointments_Deleting(e);
            }
            private static void __Appointments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Appointment e)
            {
                d.Appointments_Deleted(e);
            }
            private static void __Appointments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Appointment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Appointments_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>
                __Patients_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>(
                    "Patients_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_Single_PreprocessQuery);
            private static bool __Patients_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Patients_Single_CanExecute(ref r);
                return r;
            }
            private static void __Patients_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Patients_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Patients_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Patients_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Patient>)args[1]);
            }
            private static void __Patients_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Patients_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Patients_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Patient> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Patient>)args[1];
                d.Patients_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>
                __Patients_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>(
                    "Patients_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_SingleOrDefault_PreprocessQuery);
            private static bool __Patients_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Patients_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Patients_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Patients_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Patients_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Patients_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Patient>)args[1]);
            }
            private static void __Patients_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Patients_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Patients_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Patient> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Patient>)args[1];
                d.Patients_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>
                __Patients_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Patient>(
                    "Patients_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Patients_All_PreprocessQuery);
            private static bool __Patients_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Patients_All_CanExecute(ref r);
                return r;
            }
            private static void __Patients_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Patients_All_Executing();
            }
            private static void __Patients_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Patients_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Patient>)args[0]);
            }
            private static void __Patients_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Patients_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Patients_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Patient> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Patient>)args[0];
                d.Patients_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __Invoices_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Single_PreprocessQuery);
            private static bool __Invoices_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Invoices_Single_CanExecute(ref r);
                return r;
            }
            private static void __Invoices_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Invoices_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice>)args[1]);
            }
            private static void __Invoices_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Invoices_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Invoices_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice>)args[1];
                d.Invoices_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __Invoices_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_SingleOrDefault_PreprocessQuery);
            private static bool __Invoices_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Invoices_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Invoices_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Invoices_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice>)args[1]);
            }
            private static void __Invoices_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Invoices_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Invoices_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice>)args[1];
                d.Invoices_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __Invoices_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_All_PreprocessQuery);
            private static bool __Invoices_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Invoices_All_CanExecute(ref r);
                return r;
            }
            private static void __Invoices_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_All_Executing();
            }
            private static void __Invoices_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Invoices_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice>)args[0]);
            }
            private static void __Invoices_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Invoices_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Invoices_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Invoice>)args[0];
                d.Invoices_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>
                __InvoiceDetails_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>(
                    "InvoiceDetails_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_Single_PreprocessQuery);
            private static bool __InvoiceDetails_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.InvoiceDetails_Single_CanExecute(ref r);
                return r;
            }
            private static void __InvoiceDetails_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.InvoiceDetails_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __InvoiceDetails_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.InvoiceDetails_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.InvoiceDetail>)args[1]);
            }
            private static void __InvoiceDetails_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.InvoiceDetails_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __InvoiceDetails_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail>)args[1];
                d.InvoiceDetails_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>
                __InvoiceDetails_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>(
                    "InvoiceDetails_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_SingleOrDefault_PreprocessQuery);
            private static bool __InvoiceDetails_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.InvoiceDetails_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __InvoiceDetails_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.InvoiceDetails_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __InvoiceDetails_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.InvoiceDetails_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.InvoiceDetail>)args[1]);
            }
            private static void __InvoiceDetails_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.InvoiceDetails_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __InvoiceDetails_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail>)args[1];
                d.InvoiceDetails_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>
                __InvoiceDetails_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceDetail>(
                    "InvoiceDetails_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceDetails_All_PreprocessQuery);
            private static bool __InvoiceDetails_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.InvoiceDetails_All_CanExecute(ref r);
                return r;
            }
            private static void __InvoiceDetails_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.InvoiceDetails_All_Executing();
            }
            private static void __InvoiceDetails_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.InvoiceDetails_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.InvoiceDetail>)args[0]);
            }
            private static void __InvoiceDetails_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.InvoiceDetails_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __InvoiceDetails_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.InvoiceDetail>)args[0];
                d.InvoiceDetails_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>
                __Appointments_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>(
                    "Appointments_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_Single_PreprocessQuery);
            private static bool __Appointments_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Appointments_Single_CanExecute(ref r);
                return r;
            }
            private static void __Appointments_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Appointments_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Appointments_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Appointments_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Appointment>)args[1]);
            }
            private static void __Appointments_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Appointments_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Appointments_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment>)args[1];
                d.Appointments_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>
                __Appointments_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>(
                    "Appointments_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_SingleOrDefault_PreprocessQuery);
            private static bool __Appointments_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Appointments_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Appointments_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Appointments_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Appointments_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Appointments_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Appointment>)args[1]);
            }
            private static void __Appointments_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Appointments_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Appointments_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment>)args[1];
                d.Appointments_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>
                __Appointments_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Appointment>(
                    "Appointments_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Appointments_All_PreprocessQuery);
            private static bool __Appointments_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Appointments_All_CanExecute(ref r);
                return r;
            }
            private static void __Appointments_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Appointments_All_Executing();
            }
            private static void __Appointments_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Appointments_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Appointment>)args[0]);
            }
            private static void __Appointments_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Appointments_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Appointments_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Appointment>)args[0];
                d.Appointments_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    /// <summary>
    /// Provides members to query and update data in the PrescriptionContoso datasource.
    /// </summary>
    public sealed partial class PrescriptionContosoService
        : global::LightSwitchApplication.PrescriptionContoso
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PrescriptionContosoService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updating(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updated(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Validate(global::LightSwitchApplication.Product entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Inserting(global::LightSwitchApplication.ProductRebate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Inserted(global::LightSwitchApplication.ProductRebate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Updating(global::LightSwitchApplication.ProductRebate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Updated(global::LightSwitchApplication.ProductRebate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Deleting(global::LightSwitchApplication.ProductRebate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Deleted(global::LightSwitchApplication.ProductRebate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Validate(global::LightSwitchApplication.ProductRebate entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_Executing(global::System.Nullable<int> ProductID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_PreprocessQuery(global::System.Nullable<int> ProductID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_Executed(global::System.Nullable<int> ProductID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_ExecuteFailed(global::System.Nullable<int> ProductID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_Executing(global::System.Nullable<int> ProductID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> ProductID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_Executed(global::System.Nullable<int> ProductID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> ProductID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Single_Executing(global::System.Nullable<int> ProductRebateID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Single_PreprocessQuery(global::System.Nullable<int> ProductRebateID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Single_Executed(global::System.Nullable<int> ProductRebateID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductRebate> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_Single_ExecuteFailed(global::System.Nullable<int> ProductRebateID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_SingleOrDefault_Executing(global::System.Nullable<int> ProductRebateID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> ProductRebateID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_SingleOrDefault_Executed(global::System.Nullable<int> ProductRebateID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductRebate> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> ProductRebateID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductRebate> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductRebates_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RelatedProducts_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RelatedProducts_Executing(string Category);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RelatedProducts_PreprocessQuery(string Category, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RelatedProducts_Executed(string Category, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RelatedProducts_ExecuteFailed(string Category, global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>
                __ProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>(
                    "Products",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_CanInsert,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_CanUpdate,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_CanDelete,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_CanRead,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Inserting,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Inserted,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Updating,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Updated,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Deleting,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Deleted,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Validate);
            private static bool __Products_CanInsert(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.Products_CanInsert(ref result);
                return result;
            }
            private static bool __Products_CanUpdate(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.Products_CanUpdate(ref result);
                return result;
            }
            private static bool __Products_CanDelete(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.Products_CanDelete(ref result);
                return result;
            }
            private static bool __Products_CanRead(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.Products_CanRead(ref result);
                return result;
            }
            private static void __Products_Inserting(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserting(e);
            }
            private static void __Products_Inserted(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserted(e);
            }
            private static void __Products_Updating(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updating(e);
            }
            private static void __Products_Updated(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updated(e);
            }
            private static void __Products_Deleting(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleting(e);
            }
            private static void __Products_Deleted(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleted(e);
            }
            private static void __Products_Validate(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Products_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>
                __ProductRebatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>(
                    "ProductRebates",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_CanInsert,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_CanUpdate,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_CanDelete,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_CanRead,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Inserting,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Inserted,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Updating,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Updated,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Deleting,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Deleted,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Validate);
            private static bool __ProductRebates_CanInsert(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.ProductRebates_CanInsert(ref result);
                return result;
            }
            private static bool __ProductRebates_CanUpdate(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.ProductRebates_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductRebates_CanDelete(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.ProductRebates_CanDelete(ref result);
                return result;
            }
            private static bool __ProductRebates_CanRead(global::LightSwitchApplication.PrescriptionContosoService d)
            {
                bool result = true;
                d.ProductRebates_CanRead(ref result);
                return result;
            }
            private static void __ProductRebates_Inserting(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.ProductRebate e)
            {
                d.ProductRebates_Inserting(e);
            }
            private static void __ProductRebates_Inserted(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.ProductRebate e)
            {
                d.ProductRebates_Inserted(e);
            }
            private static void __ProductRebates_Updating(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.ProductRebate e)
            {
                d.ProductRebates_Updating(e);
            }
            private static void __ProductRebates_Updated(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.ProductRebate e)
            {
                d.ProductRebates_Updated(e);
            }
            private static void __ProductRebates_Deleting(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.ProductRebate e)
            {
                d.ProductRebates_Deleting(e);
            }
            private static void __ProductRebates_Deleted(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.ProductRebate e)
            {
                d.ProductRebates_Deleted(e);
            }
            private static void __ProductRebates_Validate(global::LightSwitchApplication.PrescriptionContosoService d, global::LightSwitchApplication.ProductRebate e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductRebates_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.PrescriptionContosoService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.PrescriptionContosoService>(
                    "SaveChanges",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>
                __Products_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>(
                    "Products_Single",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Single_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Single_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Single_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Single_Failed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_Single_PreprocessQuery);
            private static bool __Products_Single_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.Products_Single_CanExecute(ref r);
                return r;
            }
            private static void __Products_Single_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.Products_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Products_Single_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.Products_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[1]);
            }
            private static void __Products_Single_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.Products_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Products_Single_PreprocessQuery(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[1];
                d.Products_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>
                __Products_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>(
                    "Products_SingleOrDefault",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_SingleOrDefault_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_SingleOrDefault_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_SingleOrDefault_Failed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_SingleOrDefault_PreprocessQuery);
            private static bool __Products_SingleOrDefault_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.Products_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Products_SingleOrDefault_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.Products_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Products_SingleOrDefault_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.Products_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[1]);
            }
            private static void __Products_SingleOrDefault_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.Products_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Products_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[1];
                d.Products_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>
                __Products_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>(
                    "Products_All",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_All_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_All_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_All_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_All_Failed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__Products_All_PreprocessQuery);
            private static bool __Products_All_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.Products_All_CanExecute(ref r);
                return r;
            }
            private static void __Products_All_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.Products_All_Executing();
            }
            private static void __Products_All_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.Products_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[0]);
            }
            private static void __Products_All_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.Products_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Products_All_PreprocessQuery(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[0];
                d.Products_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>
                __ProductRebates_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>(
                    "ProductRebates_Single",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Single_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Single_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Single_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Single_Failed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_Single_PreprocessQuery);
            private static bool __ProductRebates_Single_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.ProductRebates_Single_CanExecute(ref r);
                return r;
            }
            private static void __ProductRebates_Single_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.ProductRebates_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProductRebates_Single_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.ProductRebates_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductRebate>)args[1]);
            }
            private static void __ProductRebates_Single_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.ProductRebates_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProductRebates_Single_PreprocessQuery(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate>)args[1];
                d.ProductRebates_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>
                __ProductRebates_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>(
                    "ProductRebates_SingleOrDefault",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_SingleOrDefault_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_SingleOrDefault_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_SingleOrDefault_Failed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_SingleOrDefault_PreprocessQuery);
            private static bool __ProductRebates_SingleOrDefault_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.ProductRebates_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __ProductRebates_SingleOrDefault_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.ProductRebates_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProductRebates_SingleOrDefault_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.ProductRebates_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductRebate>)args[1]);
            }
            private static void __ProductRebates_SingleOrDefault_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.ProductRebates_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProductRebates_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate>)args[1];
                d.ProductRebates_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>
                __ProductRebates_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.ProductRebate>(
                    "ProductRebates_All",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_All_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_All_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_All_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_All_Failed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__ProductRebates_All_PreprocessQuery);
            private static bool __ProductRebates_All_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.ProductRebates_All_CanExecute(ref r);
                return r;
            }
            private static void __ProductRebates_All_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.ProductRebates_All_Executing();
            }
            private static void __ProductRebates_All_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.ProductRebates_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductRebate>)args[0]);
            }
            private static void __ProductRebates_All_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.ProductRebates_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProductRebates_All_PreprocessQuery(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductRebate>)args[0];
                d.ProductRebates_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>
                __RelatedProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.PrescriptionContosoService, global::LightSwitchApplication.Product>(
                    "RelatedProducts",
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__RelatedProducts_CanExecute,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__RelatedProducts_Executing,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__RelatedProducts_Executed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__RelatedProducts_Failed,
                    global::LightSwitchApplication.PrescriptionContosoService.DetailsClass.__RelatedProducts_PreprocessQuery);
            private static bool __RelatedProducts_CanExecute(global::LightSwitchApplication.PrescriptionContosoService d, bool r)
            {
                d.RelatedProducts_CanExecute(ref r);
                return r;
            }
            private static void __RelatedProducts_Executing(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.RelatedProducts_Executing((string)args[0]);
            }
            private static void __RelatedProducts_Executed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                d.RelatedProducts_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[1]);
            }
            private static void __RelatedProducts_Failed(global::LightSwitchApplication.PrescriptionContosoService d, object[] args, global::System.Exception ex)
            {
                d.RelatedProducts_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __RelatedProducts_PreprocessQuery(global::LightSwitchApplication.PrescriptionContosoService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[1];
                d.RelatedProducts_PreprocessQuery((string)args[0], ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
